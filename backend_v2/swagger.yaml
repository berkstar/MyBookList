openapi: '3.0.0'
info:
  title: My Book List API with Swagger
  version: '1.0'
  description: "This is a simple CRUD API application made with Express and documented with Swagger 
  <br><br><h1>AUTH PASS (üîë): admin
  <br><br><h1>SUPER-AUTH PASS (üîëü¶π‚Äç‚ôÇÔ∏è): superadmin"
servers:
  - url: http://localhost:8080/
  




#---<<<<<<<<<<<<<<<<<<<<<<<<<<<USER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
components:
  schemas:
    User: 
           type: object
           required: 
               - username
               - email
               - name
               - password
           properties:
               user_id:
                   type: integer
               username:
                   type: string
               name:
                   type: string
               email:
                   type: string
               biography:
                   type: string
               password:
                   type: string
           example:
               username: Mahmut_03
               email: test@test.com
               name: Mahmut
               password: testtset

  securitySchemes:
    Authorization:          
      type: apiKey
      name: Authorization
      in: header
      description: 'Use that token => admin'
    Super-Authorization:          
      type: apiKey
      name: super_auth
      in: header
      description: 'Super Special key for creating librarians => superadmin'  
         
security:
   - Authorization: []    





paths:
#---<<<<<<<<<<<<<<<<<<<<<<<<<<<System>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /system/inserttuples:
    post:

      
      tags:
        - "System"

      description: Insert example tuples.
      responses:
        '200':
          description: OK - Inserted
        '500':
          description: MYSQL ERROR.

  /system/truncatetables:
    delete:
      tags:
        - "System"

      description: Truncate tables.
      responses:
        '200':
          description: OK - Truncated.
        '500':
          description: MYSQL ERROR.

  /system/inserttables:
    post:
      tags:
        - "System"

      description: Creates tables (Do not use until fully implemented).
      responses:
        '200':
          description: OK - Inserted.
        '500':
          description: MYSQL ERROR.









#---<<<<<<<<<<<<<<<<<<<<<<<<<<<Forum>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /forum/getallthreads:
    get:
      tags:
        - "Forum"

      description: Listing All Threads
      responses:
        '200':
          description: OK - Listed
          content:
            application/json:
              schema:
                type: array
                items:
                    properties:
                      tid:
                        type: string
                      name:
                        type: string
                      context:
                        type: string
        '401':
          description: Unauthorized - Token is expired or wrong.


  /forum/getposts:
    get:
      tags:
        - "Forum"

      description: Listing Post in a Thread
      parameters:
        - in: query
          name: tid
          schema:
            type: integer
      responses:
        '200':
          description: OK - Listed
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    pid:
                      type: integer
                    user_name:
                      type: string
                    title:
                      type: string
                    text:
                      type: string
        '401':
          description: Unauthorized - Token is expired or wrong.


#---<<<<<<<<<<<<<<<<<<<<<<<<<<<USER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>







  /user/login:
    post:
      tags:
        - "User"

      description: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  username:
                    type: string
                  password:
                    type: string
              example:
               username: Mahmut_03
               password: testtset
              
      responses:
        '200':
          description: OK - Successfully logged in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  token:
                    type: string
                  type:
                    type: integer
        '401':
          description: Unauthorized - Wrong username or email.




       
  /user/register:
    post:
      security:
        - Super-Authorization: []
        
      tags:
        - "User"

      description: Registers the user. Super-Auth Key is required in order to register as Librarian.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
               user_id:
                  type: integer
               username:
                  type: string
               name:
                  type: string
               email:
                  type: string
               biography:
                  type: string
               password:
                  type: string
               type:
                  type: integer
              example:
               username: Mahmut_03
               email: test@test.com
               name: Mahmut
               password: testtset
               type: 1
      responses:
        '200':
          description: OK - Successfully registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  token:
                    type: string
                  type:
                    type: integer
        '406':
          description: Not Acceptable - User with same username or email already exists.








  /user/addfriend:
    post:
      tags:
        - "User"

      description: Adds friend to the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: string
                    format: user_id
                    example: 1
                  fid:
                    type: string
                    format: friend_id
                    example: 7

              
      responses:
        '200':
          description: OK - Successfully added the friend.
        '401':
          description: Unauthorized - Wrong username or email.

  /user/getfriends:
    get:
      tags:
        - "User"

      description: Lists user's friends
      parameters:
        - in: query
          name: uid
          schema:
            type: integer
          description: Id of user
          example: 1
      responses:
        '200':
          description: OK - Successfully listed.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    user_id:
                      type: integer
                    user_name:
                      type: string
                    name:
                      type: string
                    biography:
                      type: string        
        '401':
          description: Unauthorized - Token is expired or wrong.


  /user/getusers:
    get:
      tags:
        - "User"

      description: Lists non friend users except itself. Friends mush have accepeted.
      parameters:
        - in: query
          name: uid
          schema:
            type: integer
          description: Id of user
          example: 1
      responses:
        '200':
          description: OK - Successfully listed.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    user_id:
                      type: integer
                    user_name:
                      type: string
                    name:
                      type: string
                    biography:
                      type: string        
        '401':
          description: Unauthorized - Token is expired or wrong.

   